import cv2
import time
import os
import mediapipe as mp
import numpy as np

CurrentTime = 0
PreviousTime = 0

Capture = cv2.VideoCapture(0)
Capture.set(3, 1280)
Capture.set(4, 720)
Capture.set(cv2.CAP_PROP_FPS, 60)

DrawColor = (255, 200, 100)
Board = np.zeros((900, 1280, 3), np.uint8)
# detector = TH.HandDetector(min_detection_confidence=.85)
hands = mp.solutions.hands
hand_landmark = hands.Hands(min_detection_confidence=0.8, min_tracking_confidence=0.8, max_num_hands=1)
draw = mp.solutions.drawing_utils

#contants
ml = 150
# max_x, max_y = 250+ml, 50
curr_tool = "select tool"
time_init = True
rad = 40
var_inits = False
thick = 4
x = 0
y = 0
xp, yp = 0, 0
# prevx, prevy = 0,0

#get tools function
def getTool(x):
	if x < 50 + ml:
		return "line"

	elif x<100 + ml:
		return "rectangle"

	elif x < 150 + ml:
		return"draw"

	elif x<200 + ml:
		return "circle"

	else:
		return "erase"

def index_raised(yi, y9):
	if (y9 - yi) > 40:
		return False

	return True
    


while True:
	ret, frame = Capture.read()
	frame = cv2.flip(frame,1)
	rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    #frame[0:125, 0:1280] = BrushBoard
	op = hand_landmark.process(rgb)

	if op.multi_hand_landmarks:
		for i in op.multi_hand_landmarks:
			draw.draw_landmarks(frame, i, hands.HAND_CONNECTIONS)
			
